---
- hosts: localhost
  name: Manage TMDB account with uri
  gather_facts: false

  vars:
    tmdb_api_url: "https://api.themoviedb.org/3"
    # set in AAP credential tmdb_account_id:
    tmdb_api_key: "{{ lookup('env', 'TMDB_API_KEY') }}"
    tmdb_username: "{{ lookup('env', 'TMDB_USERNAME') }}"
    tmdb_password: "{{ lookup('env', 'TMDB_PASSWORD') }}"

  tasks:
    - name: Query Movie & TV information
      register: _movie_tv_results
      when: content_type == "Movie" or content_type == "TV"
      ansible.builtin.uri:
        url: "{{ tmdb_api_url }}/search/{{ content_type | lower }}?query={{ content_search | regex_replace(' ', '%20') }}&api_key={{ tmdb_api_key }}"
        method: GET

    - name: Query Actor information for id
      register: _actor_id
      when: content_type == "Actor"
      ansible.builtin.uri:
        url: "{{ tmdb_api_url }}/search/person?query={{ content_search | regex_replace(' ', '%20') }}&include_adult=false&language=en-US&api_key={{ tmdb_api_key }}"
        method: GET

    - name: Query Actor filmography
      register: _actor_filmography
      when: content_type == "Actor"
      ansible.builtin.uri:
        url: "{{ tmdb_api_url }}/person/{{ _actor_id.json.results[0].id }}/movie_credits?language=en-US&api_key={{ tmdb_api_key }}"
        method: GET

    - name: Debug Movie & TV search results
      when: _movie_tv_results.json.results is defined
      ansible.builtin.debug:
        var: _movie_tv_results.json.results | json_query('[].{Title:original_title,Released:release_date}')

    - name: Debug Actor search results
      when: _actor_filmography.json.cast is defined
      ansible.builtin.debug:
        var: _actor_filmography.json.cast | json_query('[].{Title:original_title,Released:release_date}')

    # - name: Validate token with login
    #   ansible.builtin.uri:
    #     url: "{{ tmdb_api_url }}/authentication/token/validate_with_login?api_key={{ tmdb_api_key }}"
    #     method: POST
    #     body_format: json
    #     body:
    #       username: "{{ tmdb_username }}"
    #       password: "{{ tmdb_password }}"
    #       request_token: "{{ r_req_token['json']['request_token'] }}"

    # - name: Create session
    #   register: r_session
    #   ansible.builtin.uri:
    #     url: "{{ tmdb_api_url }}/authentication/session/new?api_key={{ tmdb_api_key }}"
    #     method: POST
    #     body_format: json
    #     body:
    #       request_token: "{{ r_req_token['json']['request_token'] }}"

    # - name: Set auth query
    #   ansible.builtin.set_fact:
    #     tmdb_auth_query: "api_key={{ tmdb_api_key }}&session_id={{ r_session['json']['session_id'] }}"

    # - name: Get favorite movies
    #   register: r_fav_movies
    #   ansible.builtin.uri:
    #     url: "{{ tmdb_api_url }}/account/{{ tmdb_account_id }}/favorite/movies?{{ tmdb_auth_query }}"
    #     method: GET

    # - name: Debug favorite movies
    #   ansible.builtin.debug:
    #     var: r_fav_movies.json